{"version":3,"sources":["components/layout/Header.js","components/layout/Footer.js","components/EggImage.js","components/Egg.js","components/ElementalButton.js","components/StatBlock.js","components/layout/GameContainer.js","App.js","serviceWorker.js","index.js"],"names":["Header","style","headerStyle","Component","background","color","textAlight","padding","backgroundColor","borderTop","textAlign","position","left","bottom","height","width","phantom","display","Footer","EggImage","getEggSource","egg","console","log","this","eggList","Image","className","src","props","alt","fluid","React","Egg","elements","result","text","gameOver","fire","percent","water","air","earth","magic","computeEnding","Card","bg","label","Body","Title","Text","getCardText","ElementalButton","Button","onClick","handleClick","type","size","block","variant","toLowerCase","disabled","StatBlock","day","days","ProgressBar","striped","animated","now","progress","Table","bordered","hover","gameData","startGame","GameContainer","state","gameLength","value","decimals","Number","Math","round","elementList","updatePercents","forEach","element","elementData","toString","setState","calcProgress","processTurn","Container","Row","Col","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8f25e154.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header style={headerStyle}>\r\n                <h1>Dragon Egg Game</h1>\r\n            </header>\r\n        )\r\n    }\r\n};\r\n\r\nconst headerStyle = {\r\n    background: '#333333',\r\n    color: '#FFFFFF',\r\n    textAlight: 'center',\r\n    padding: '10px'\r\n};\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nconst style = {\r\n    backgroundColor: \"#F8F8F8\",\r\n    borderTop: \"1px solid #E7E7E7\",\r\n    textAlign: \"center\",\r\n    padding: \"20px\",\r\n    position: \"fixed\",\r\n    left: \"0\",\r\n    bottom: \"0\",\r\n    height: \"60px\",\r\n    width: \"100%\",\r\n}\r\n\r\nconst phantom = {\r\n    display: 'block',\r\n    padding: '20px',\r\n    height: '60px',\r\n    width: '100%',\r\n}\r\n\r\nexport class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={phantom} />\r\n                <div style={style}>\r\n                    <p>&copy;2020 Noisy Fan Games. All rights reserved. Designed by Anthony A. Gaff, Developed by Anthony A. Gaff and Joshua Hall</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nclass EggImage extends React.Component {\r\n    getEggSource = (egg) => {\r\n        return \"../assets/\" + egg + \".png\";\r\n    }\r\n\r\n    render() {\r\n        console.log(this.eggList);\r\n        return (\r\n            <Image className=\"egg-image\" src={this.getEggSource(this.props.egg)} alt=\"Plain Egg\" fluid />\r\n        );\r\n    };\r\n};\r\n\r\nexport default EggImage;","import React from 'react';\r\nimport EggImage from './EggImage';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nclass Egg extends React.Component {\r\n\r\n    computeEnding(elements) {\r\n        let result = {\r\n            text: \"Your egg is ready. You have incubated a \",\r\n            egg: \"egg00\"\r\n        };\r\n\r\n        if (this.props.gameOver) {\r\n            if (elements.fire.percent >= 90) {\r\n                result.text += \"Fire Dragon\";\r\n                result.egg = \"egg01\"\r\n            } else if (elements.water.percent >= 90) {\r\n                result.text += \"Water Dragon\";\r\n                result.egg = \"egg02\"\r\n            } else if (elements.air.percent >= 90) {\r\n                result.text += \"Air Dragon\";\r\n                result.egg = \"egg04\"\r\n            } else if (elements.earth.percent >= 90) {\r\n                result.text += \"Earth Dragon\";\r\n                result.egg = \"egg03\"\r\n            } else if (elements.magic.percent >= 90) {\r\n                result.text += \"Magic Dragon\";\r\n                result.egg = \"egg05\"\r\n            } else {\r\n                result.text = \"Your choices have resulted in an inert egg. Please try again\";\r\n            }\r\n        };\r\n        return result;\r\n    };\r\n\r\n    getCardText(gameOver, elements) {\r\n        if (!gameOver) {\r\n            return \"You have 30 days to incubate your egg. Choose an element below for each day to see what hatches.\";\r\n        } else {\r\n            return this.computeEnding(elements).text;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card\r\n                bg=\"light\"\r\n                className=\"mb-3\"\r\n            >\r\n                <Card.Header>{this.props.label}</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title>Incubation Chamber</Card.Title>\r\n                    <EggImage egg={this.computeEnding(this.props.elements).egg} />\r\n                    <Card.Text>\r\n                        {this.getCardText(this.props.gameOver, this.props.elements)}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Egg;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass ElementalButton extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Button\r\n                onClick={() => this.props.handleClick(this.props.type)}\r\n                size=\"lg\"\r\n                block\r\n                variant={this.props.type.toLowerCase()}\r\n                disabled={this.props.disabled}\r\n            >\r\n                {this.props.type}\r\n            </Button >\r\n        );\r\n    };\r\n};\r\n\r\nexport default ElementalButton;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from 'react-bootstrap/Button';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\n\r\nclass StatBlock extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Card\r\n                bg=\"dark\"\r\n                text=\"white\"\r\n                className=\"mb-3\"\r\n            >\r\n                <Card.Header>Incubation Data</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        You are on day {this.props.day} of {this.props.days}\r\n                    </Card.Title>\r\n                    <ProgressBar className=\"game-progress\" striped animated now={this.props.progress} />\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Element</th>\r\n                                <th>Days Used</th>\r\n                                <th>Incubation Percent</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Fire</td>\r\n                                <td>{this.props.gameData.elements.fire.days}</td>\r\n                                <td><ProgressBar striped animated now={this.props.gameData.elements.fire.percent} label={`${this.props.gameData.elements.fire.percent}%`} /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Water</td>\r\n                                <td>{this.props.gameData.elements.water.days}</td>\r\n                                <td><ProgressBar striped animated now={this.props.gameData.elements.water.percent} label={`${this.props.gameData.elements.water.percent}%`} /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Air</td>\r\n                                <td>{this.props.gameData.elements.air.days}</td>\r\n                                <td><ProgressBar striped animated now={this.props.gameData.elements.air.percent} label={`${this.props.gameData.elements.air.percent}%`} /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Earth</td>\r\n                                <td>{this.props.gameData.elements.earth.days}</td>\r\n                                <td><ProgressBar striped animated now={this.props.gameData.elements.earth.percent} label={`${this.props.gameData.elements.earth.percent}%`} /></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Water</td>\r\n                                <td>{this.props.gameData.elements.magic.days}</td>\r\n                                <td><ProgressBar striped animated now={this.props.gameData.elements.magic.percent} label={`${this.props.gameData.elements.magic.percent}%`} /></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                    <Card.Text>\r\n                        Track your egg's incubation progress here.\r\n                    </Card.Text>\r\n                    {this.props.gameOver ? <Button variant=\"primary\" onClick={() => this.props.startGame()} >Start a New Game</Button> : null}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatBlock;","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col'\r\nimport Egg from '../Egg';\r\nimport ElementalButton from '../ElementalButton';\r\nimport StatBlock from '../StatBlock';\r\n\r\nexport class GameContainer extends Component {\r\n\r\n    state = {\r\n        day: 0,\r\n        gameLength: 10,\r\n        progress: 0,\r\n        gameOver: false,\r\n        elements: {\r\n            fire: {\r\n                days: 0,\r\n                percent: 0\r\n            },\r\n            water: {\r\n                days: 0,\r\n                percent: 0\r\n            },\r\n            air: {\r\n                days: 0,\r\n                percent: 0\r\n            },\r\n            earth: {\r\n                days: 0,\r\n                percent: 0\r\n            },\r\n            magic: {\r\n                days: 0,\r\n                percent: 0\r\n            }\r\n        }\r\n    };\r\n\r\n    round(value, decimals) {\r\n        return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\r\n    }\r\n\r\n    render() {\r\n\r\n        const elementList = [\r\n            \"fire\",\r\n            \"water\",\r\n            \"air\",\r\n            \"earth\",\r\n            \"magic\"\r\n        ];\r\n\r\n        const startGame = () => {\r\n            let elementReset = {\r\n                fire: {\r\n                    days: 0,\r\n                    percent: 0\r\n                },\r\n                water: {\r\n                    days: 0,\r\n                    percent: 0\r\n                },\r\n                air: {\r\n                    days: 0,\r\n                    percent: 0\r\n                },\r\n                earth: {\r\n                    days: 0,\r\n                    percent: 0\r\n                },\r\n                magic: {\r\n                    days: 0,\r\n                    percent: 0\r\n                }\r\n            };\r\n            this.setState({ day: 0 });\r\n            this.setState({ progress: 0 });\r\n            this.setState({ gameOver: false });\r\n            this.setState({ elements: elementReset });\r\n        };\r\n\r\n        const processTurn = (element) => {\r\n            let elements = this.state.elements;\r\n            elements[element].days++;\r\n            this.setState({ elements: elements });\r\n            this.setState({ day: this.state.day + 1 });\r\n            updatePercents();\r\n            calcProgress();\r\n            if (this.state.day + 1 >= this.state.gameLength) {\r\n                this.setState({ gameOver: true });\r\n            }\r\n        }\r\n\r\n        const updatePercents = () => {\r\n            elementList.forEach(element => {\r\n                let elementData = this.state.elements[element];\r\n                elementData.percent = elementData.days > 0 ? (this.round((elementData.days / (this.state.day + 1) * 100), 2)).toString() : 0;\r\n            })\r\n        }\r\n\r\n        const handleClick = (element) => {\r\n            processTurn(element.toLowerCase());\r\n        };\r\n\r\n        const calcProgress = () => {\r\n            let progress = this.round(((this.state.day + 1) / this.state.gameLength) * 100, 2);\r\n            this.setState({ progress: progress });\r\n        }\r\n\r\n        return (\r\n            <Container className=\"game-container\" fluid>\r\n                <Row>\r\n                    <Col>\r\n                        <Egg label=\"Your Egg\" gameOver={this.state.gameOver} elements={this.state.elements} />\r\n                    </Col>\r\n                    <Col>\r\n                        <StatBlock\r\n                            day={this.state.day}\r\n                            progress={this.state.progress}\r\n                            days={this.state.gameLength}\r\n                            gameData={this.state}\r\n                            gameOver={this.state.gameOver}\r\n                            startGame={startGame}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <ElementalButton type=\"Fire\" handleClick={handleClick} disabled={this.state.gameOver} />\r\n                    </Col>\r\n                    <Col>\r\n                        <ElementalButton type=\"Water\" handleClick={handleClick} disabled={this.state.gameOver} />\r\n                    </Col>\r\n                    <Col>\r\n                        <ElementalButton type=\"Air\" handleClick={handleClick} disabled={this.state.gameOver} />\r\n                    </Col>\r\n                    <Col>\r\n                        <ElementalButton type=\"Earth\" handleClick={handleClick} disabled={this.state.gameOver} />\r\n                    </Col>\r\n                    <Col>\r\n                        <ElementalButton type=\"Magic\" handleClick={handleClick} disabled={this.state.gameOver} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default GameContainer;","import React from 'react';\r\nimport './Styles/style.css';\r\nimport './App.css';\r\nimport Header from './components/layout/Header';\r\nimport Footer from './components/layout/Footer';\r\nimport GameContainer from './components/layout/GameContainer';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <GameContainer />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}