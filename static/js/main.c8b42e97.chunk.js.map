{"version":3,"sources":["components/layout/Header.js","components/layout/Footer.js","components/EggImage.js","components/Egg.js","components/ElementalButton.js","components/StatBlock.js","OutcomeList.js","StartGameState.js","components/layout/GameContainer.js","App.js","serviceWorker.js","index.js"],"names":["Header","style","headerStyle","Component","background","color","textAlight","padding","backgroundColor","borderTop","textAlign","position","left","bottom","height","width","phantom","display","Footer","EggImage","getEggSource","egg","Image","className","src","this","props","toLowerCase","alt","fluid","React","Egg","Card","bg","label","Body","Title","Text","cardText","ElementalButton","Button","onClick","handleClick","type","size","block","variant","disabled","StatBlock","text","day","days","ProgressBar","striped","animated","now","progress","Table","bordered","hover","gameData","elements","fire","percent","water","air","earth","magic","gameOver","startGame","outcomeList","outcome","tests","StartGameState","gameLength","GameContainer","state","JSON","parse","stringify","value","decimals","Number","Math","round","outcomes","OutcomeList","filter","testArray","forEach","test","Object","entries","key","push","every","result","length","ending","console","log","toUpperCase","replace","elementList","updatePercents","element","prevState","calcProgress","computeOutcome","setState","processTurn","Container","Row","Col","getCardText","getEgg","restartGame","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c8b42e97.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header style={headerStyle}>\r\n                <h1>Dragon Egg Game</h1>\r\n            </header>\r\n        )\r\n    }\r\n};\r\n\r\nconst headerStyle = {\r\n    background: '#333333',\r\n    color: '#FFFFFF',\r\n    textAlight: 'center',\r\n    padding: '10px'\r\n};\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nconst style = {\r\n    backgroundColor: \"#F8F8F8\",\r\n    borderTop: \"1px solid #E7E7E7\",\r\n    textAlign: \"center\",\r\n    padding: \"20px\",\r\n    position: \"fixed\",\r\n    left: \"0\",\r\n    bottom: \"0\",\r\n    height: \"60px\",\r\n    width: \"100%\",\r\n}\r\n\r\nconst phantom = {\r\n    display: 'block',\r\n    padding: '20px',\r\n    height: '60px',\r\n    width: '100%',\r\n}\r\n\r\nexport class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={phantom} />\r\n                <div style={style}>\r\n                    <p>&copy;2020 Noisy Fan Games. All rights reserved. Designed by Anthony A. Gaff, Developed by Anthony A. Gaff and Joshua Hall</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Image from 'react-bootstrap/Image';\r\n\r\nclass EggImage extends React.Component {\r\n    getEggSource = (egg) => {\r\n        return \"../assets/\" + egg + \".png\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Image className=\"egg-image\" src={this.getEggSource(this.props.egg).toLowerCase()} alt=\"Plain Egg\" fluid />\r\n        );\r\n    };\r\n};\r\n\r\nexport default EggImage;","import React from 'react';\r\nimport EggImage from './EggImage';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nclass Egg extends React.Component {\r\n    render() {\r\n        return (\r\n            <Card\r\n                bg=\"light\"\r\n                className=\"mb-3\"\r\n            >\r\n                <Card.Header>{this.props.label}</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title>Incubation Chamber</Card.Title>\r\n                    <EggImage egg={this.props.egg} />\r\n                    <Card.Text>\r\n                        {this.props.cardText}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Egg;","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass ElementalButton extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Button\r\n                onClick={() => this.props.handleClick(this.props.type)}\r\n                size=\"lg\"\r\n                block\r\n                variant={this.props.type.toLowerCase()}\r\n                disabled={this.props.disabled}\r\n            >\r\n                {this.props.type}\r\n            </Button >\r\n        );\r\n    };\r\n};\r\n\r\nexport default ElementalButton;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from 'react-bootstrap/Button';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\n\r\nclass StatBlock extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Card\r\n                bg=\"dark\"\r\n                text=\"white\"\r\n                className=\"mb-3\"\r\n            >\r\n                <Card.Header>Incubation Data</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        You are on day {this.props.day} of {this.props.days}\r\n                    </Card.Title>\r\n                    <ProgressBar className=\"game-progress\" striped animated now={this.props.progress} />\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Element</th>\r\n                                <th>Days Used</th>\r\n                                <th>Incubation Percent</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Fire</td>\r\n                                <td>{this.props.gameData.elements.fire.days}</td>\r\n                                <td><ProgressBar\r\n                                    striped\r\n                                    animated\r\n                                    variant=\"fire\"\r\n                                    now={this.props.gameData.elements.fire.percent}\r\n                                    label={`${this.props.gameData.elements.fire.percent}%`}\r\n                                />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Water</td>\r\n                                <td>{this.props.gameData.elements.water.days}</td>\r\n                                <td><ProgressBar\r\n                                    striped\r\n                                    animated\r\n                                    variant=\"water\"\r\n                                    now={this.props.gameData.elements.water.percent}\r\n                                    label={`${this.props.gameData.elements.water.percent}%`}\r\n                                />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Air</td>\r\n                                <td>{this.props.gameData.elements.air.days}</td>\r\n                                <td><ProgressBar\r\n                                    striped\r\n                                    animated\r\n                                    variant=\"air\"\r\n                                    now={this.props.gameData.elements.air.percent}\r\n                                    label={`${this.props.gameData.elements.air.percent}%`}\r\n                                />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Earth</td>\r\n                                <td>{this.props.gameData.elements.earth.days}</td>\r\n                                <td><ProgressBar\r\n                                    striped\r\n                                    animated\r\n                                    variant=\"earth\"\r\n                                    now={this.props.gameData.elements.earth.percent}\r\n                                    label={`${this.props.gameData.elements.earth.percent}%`}\r\n                                />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Magic</td>\r\n                                <td>{this.props.gameData.elements.magic.days}</td>\r\n                                <td><ProgressBar\r\n                                    striped\r\n                                    animated\r\n                                    variant=\"magic\"\r\n                                    now={this.props.gameData.elements.magic.percent}\r\n                                    label={`${this.props.gameData.elements.magic.percent}%`}\r\n                                />\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                    <Card.Text>\r\n                        Track your egg's incubation progress here.\r\n                    </Card.Text>\r\n                    {this.props.gameOver ? <Button variant=\"primary\" onClick={() => this.props.startGame()} >Start a New Game</Button> : null}\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StatBlock;","const outcomeList = [\r\n    {\r\n        outcome: \"Fire\",\r\n        tests: [\r\n            {\r\n                fire: 90\r\n            }\r\n\r\n        ]\r\n    },\r\n    {\r\n        outcome: \"Water\",\r\n        tests: [\r\n            {\r\n                water: 90\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        outcome: \"Air\",\r\n        tests: [\r\n            {\r\n                air: 90\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        outcome: \"Earth\",\r\n        tests: [\r\n            {\r\n                earth: 90\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        outcome: \"Magic\",\r\n        tests: [\r\n            {\r\n                magic: 90\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        outcome: \"Smoke\",\r\n        tests: [\r\n            {\r\n                fire: 40\r\n            },\r\n            {\r\n                air: 40\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        outcome: \"Steam\",\r\n        tests: [\r\n            {\r\n                fire: 40\r\n            },\r\n            {\r\n                water: 40\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        outcome: \"Lava\",\r\n        tests: [\r\n            {\r\n                fire: 30\r\n            },\r\n            {\r\n                earth: 40\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        outcome: \"Star\",\r\n        tests: [\r\n            {\r\n                fire: 30\r\n            },\r\n            {\r\n                magic: 30\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        outcome: \"Ice\",\r\n        tests: [\r\n            {\r\n                air: 30\r\n            },\r\n            {\r\n                water: 50\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        outcome: \"Dust\",\r\n        tests: [\r\n            {\r\n                air: 30\r\n            },\r\n            {\r\n                earth: 40\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        outcome: \"Invisible\",\r\n        tests: [\r\n            {\r\n                air: 30\r\n            },\r\n            {\r\n                magic: 50\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        outcome: \"Lunar\",\r\n        tests: [\r\n            {\r\n                water: 20\r\n            },\r\n            {\r\n                magic: 40\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        outcome: \"Mud\",\r\n        tests: [\r\n            {\r\n                water: 30\r\n            },\r\n            {\r\n                earth: 40\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        outcome: \"Skeletal\",\r\n        tests: [\r\n            {\r\n                earth: 40\r\n            },\r\n            {\r\n                magic: 45\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        outcome: \"Dragon Lord\",\r\n        tests: [\r\n            {\r\n                fire: 20\r\n            },\r\n            {\r\n                water: 20\r\n            },\r\n            {\r\n                air: 20\r\n            },\r\n            {\r\n                earth: 20\r\n            },\r\n            {\r\n                magic: 20\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\nexport default outcomeList;","const StartGameState = {\r\n    day: 0,\r\n    gameLength: 5,\r\n    progress: 0,\r\n    gameOver: false,\r\n    elements: {\r\n        fire: {\r\n            days: 0,\r\n            percent: 0\r\n        },\r\n        water: {\r\n            days: 0,\r\n            percent: 0\r\n        },\r\n        air: {\r\n            days: 0,\r\n            percent: 0\r\n        },\r\n        earth: {\r\n            days: 0,\r\n            percent: 0\r\n        },\r\n        magic: {\r\n            days: 0,\r\n            percent: 0\r\n        }\r\n    }\r\n};\r\n\r\nexport default StartGameState;","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col'\r\nimport Egg from '../Egg';\r\nimport ElementalButton from '../ElementalButton';\r\nimport StatBlock from '../StatBlock';\r\nimport OutcomeList from '../../OutcomeList';\r\nimport StartGameState from '../../StartGameState';\r\n\r\nexport class GameContainer extends Component {\r\n\r\n    state = JSON.parse(JSON.stringify(StartGameState));\r\n\r\n\r\n    round(value, decimals) {\r\n        return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\r\n    };\r\n\r\n    computeOutcome(elements) {\r\n        let outcomes = OutcomeList.filter((outcome) => {\r\n            let testArray = [];\r\n            outcome.tests.forEach((test) => {\r\n                for (const [key, value] of Object.entries(test)) {\r\n                    testArray.push(elements[key].percent >= value);\r\n                }\r\n            });\r\n            if (testArray.every(result => result === true)) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        });\r\n        return outcomes.length > 0 ? outcomes : [{ outcome: \"inert\" }];\r\n    };\r\n\r\n    getCardText() {\r\n        if (this.state.gameOver && this.state.outcomes) {\r\n            let outcome = this.state.outcomes[0].outcome;\r\n            console.log(outcome);\r\n            let ending;\r\n            if (outcome === \"Dragon Lord\") {\r\n                ending = \"!!\";\r\n            } else if (outcome === \"inert\") {\r\n                ending = \" egg.\";\r\n            } else {\r\n                ending = \" dragon.\";\r\n            }\r\n            return `Your egg is ready. You have incubated a ${outcome.toUpperCase()}${ending}`;\r\n        }\r\n        return \"You have 30 days to incubate your egg. Choose an element below for each day to see what hatches.\";\r\n    }\r\n\r\n    getEgg() {\r\n        if (this.state.gameOver && this.state.outcomes) {\r\n            return this.state.outcomes[0].outcome.replace(\" \", \"-\");\r\n        }\r\n        return \"egg\";\r\n    }\r\n\r\n    render() {\r\n        const elementList = [\r\n            \"fire\",\r\n            \"water\",\r\n            \"air\",\r\n            \"earth\",\r\n            \"magic\"\r\n        ];\r\n\r\n        const startGame = () => {\r\n            let restartGame = JSON.parse(JSON.stringify(StartGameState));\r\n            this.setState({ ...restartGame });\r\n        }\r\n\r\n        const processTurn = (element) => {\r\n            let prevState = this.state;\r\n            let elements = this.state.elements;\r\n            elements[element].days++;\r\n            prevState.elements = elements;\r\n            prevState.day++;\r\n            prevState.elements = updatePercents(prevState.elements);\r\n            prevState.progress = calcProgress(prevState.day, prevState.gameLength);\r\n            if (prevState.day >= prevState.gameLength) {\r\n                prevState.gameOver = true;\r\n                prevState.outcomes = this.computeOutcome(prevState.elements);\r\n            }\r\n            this.setState({ ...prevState });\r\n        }\r\n\r\n        const updatePercents = (elements) => {\r\n            elementList.forEach(element => {\r\n                elements[element].percent = elements[element].days > 0 ? (this.round((elements[element].days / (this.state.day) * 100), 2)) : 0;\r\n            })\r\n            return elements;\r\n        }\r\n\r\n        const handleClick = (element) => {\r\n            processTurn(element.toLowerCase());\r\n        };\r\n\r\n        const calcProgress = (day, gameLength) => {\r\n            return this.round(((day) / gameLength) * 100, 2);\r\n        }\r\n\r\n        return (\r\n            <Container className=\"game-container\" fluid>\r\n                <Row>\r\n                    <Col>\r\n                        <Egg label=\"Your Egg\"\r\n                            cardText={this.getCardText()}\r\n                            egg={this.getEgg()}\r\n                        />\r\n                    </Col>\r\n                    <Col>\r\n                        <StatBlock\r\n                            day={this.state.day}\r\n                            progress={this.state.progress}\r\n                            days={this.state.gameLength}\r\n                            gameData={this.state}\r\n                            gameOver={this.state.gameOver}\r\n                            startGame={startGame}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <ElementalButton type=\"Fire\" handleClick={handleClick} disabled={this.state.gameOver} />\r\n                    </Col>\r\n                    <Col>\r\n                        <ElementalButton type=\"Water\" handleClick={handleClick} disabled={this.state.gameOver} />\r\n                    </Col>\r\n                    <Col>\r\n                        <ElementalButton type=\"Air\" handleClick={handleClick} disabled={this.state.gameOver} />\r\n                    </Col>\r\n                    <Col>\r\n                        <ElementalButton type=\"Earth\" handleClick={handleClick} disabled={this.state.gameOver} />\r\n                    </Col>\r\n                    <Col>\r\n                        <ElementalButton type=\"Magic\" handleClick={handleClick} disabled={this.state.gameOver} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default GameContainer;","import React from 'react';\r\nimport './Styles/style.css';\r\nimport './App.css';\r\nimport Header from './components/layout/Header';\r\nimport Footer from './components/layout/Footer';\r\nimport GameContainer from './components/layout/GameContainer';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <GameContainer />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}